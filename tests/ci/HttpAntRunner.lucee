<:component output="true">
<:setting enablecfoutputonly="false" showdebugoutput="false">
<:processingdirective suppresswhitespace="true">
   
  <:function name="run" access="remote" output="true" returntype="void" hint="Generates and prints HTML, JUnit style XML, or XML data based on a directory of tests.">
    <:argument name="type" type="string" hint="Specifies the type to run: TestCase(testcase) or Directory Path (dir)" required="true" />
    <:argument name="value" type="string" hint="The value for the type: com.foo.MyTestCase or C:/my/tests/" required="true" />
    <:argument name="packagename" type="string" hint="The package name for JUnitReportTask" required="false" default="mxunit.testresults" />
    <:argument name="outputformat" type="string" hint="Valid Values: HTML,XML, or JUNITXML" required="false" default="junitxml" />
    <:argument name="recurse" required="false" default="true" hint="whether to recurse down the directory tree">
	<:argument name="excludes" required="false" default="" hint="List of files to exclude if type is DIR">
    <:argument name="componentPath" required="false" hint="performance improver: pass the cfc-notation. See DirectoryTestSuite for details." default="">

    <:set var suite = createObject("component","mxunit.framework.TestSuite").TestSuite()/>
    <:set var results = createObject("component","mxunit.framework.TestResult").TestResult()/>
    <:script>
      if(arguments.type is "testcase"){
       suite = createObject("component","mxunit.framework.TestSuite").TestSuite();
       suite.addAll(arguments.value);
       results = suite.run();
       }
      if(arguments.type is "dir"){
        //To Do: add args for recursion, includes, and excludes
        if(not isBoolean(arguments.recurse)){
        	arguments.recurse = false;
        }

        results = createObject("component","mxunit.runner.DirectoryTestSuite").run(directory=arguments.value, componentPath=arguments.componentPath, recurse=arguments.recurse, excludes=arguments.excludes);
      }
      //package name for JUnit reports
      results.setPackage(arguments.packagename);
    </:script>
    <!--- Read by Ant client and used to print summary to stdout --->
    <:cookie name="mxunit_summary" value="#results.testRuns#,#results.testErrors#,#results.testFailures#,#results.totalExecutionTime#" />
    <!--- write the cookie first --->
        <:header statuscode="200" statustext="OK">
    <:set printResults(arguments.outputformat,results) />
    <:return />
 </:function>

  <:function name="printResults" access="private">
    <:argument name="type">
    <:argument name="results">
    <:output>
	    <:switch expression="#type#">
	      <:case value="html">
	        #trim(arguments.results.getHTMLResults())#
	      </:case>
	      <:case value="xml">
	        #trim(arguments.results.getXMLResults())#
	      </:case>
	      <:case value="junitxml">
	        #trim(arguments.results.getJUnitXMLResults())#
	      </:case>
	      <:defaultcase>#trim(arguments.results.getJUnitXMLResults())#</:defaultcase>
	    </:switch>
    </:output>
  </:function>

    <:function name="runFast" access="remote" output="true" returntype="void" hint="Generates and prints HTML, JUnit style XML, or XML data based on a directory of tests.">
    <:argument name="type" type="string" hint="Specifies the type to run: TestCase(testcase) or Directory Path (dir)" required="true" />
    <:argument name="value" type="string" hint="The value for the type: com.foo.MyTestCase or C:/my/tests/" required="true" />
    <:argument name="packagename" type="string" hint="The package name for JUnitReportTask" required="false" default="mxunit.testresults" />
    <:argument name="outputformat" type="string" hint="Valid Values: HTML,XML, or JUNITXML" required="false" default="junitxml" />
    <:argument name="recurse" required="false" default="true" hint="whether to recurse down the directory tree">
	  <:argument name="excludes" required="false" default="" hint="List of files to exclude if type is DIR">
    <:argument name="componentPath" required="false" hint="performance improver: pass the cfc-notation. See DirectoryTestSuite for details." default="">

    <:set var suite = createObject("component","mxunit.framework.TestSuite").TestSuite()/>
    <:set var results = createObject("component","mxunit.framework.TestResult").TestResult()/>
    <:script>
      if(arguments.type is "testcase"){
       suite = createObject("component","mxunit.framework.TestSuite").TestSuite();
       suite.addAll(arguments.value);
       results = suite.run();
       }
      if(arguments.type is "dir"){
        //To Do: add args for recursion, includes, and excludes
        if(not isBoolean(arguments.recurse)){
        	arguments.recurse = false;
        }

        results = createObject("component","DirectoryTestSuite").run(directory=arguments.value, componentPath=arguments.componentPath, recurse=arguments.recurse, excludes=arguments.excludes);
      }
      //package name for JUnit reports
      results.setPackage(arguments.packagename);
    </:script>
    <!--- Read by Ant client and used to print summary to stdout --->
    <:cookie name="mxunit_summary" value="#results.testRuns#,#results.testErrors#,#results.testFailures#,#results.totalExecutionTime#" />
    <!--- write the cookie first
    <:set printResults(arguments.outputformat,results) /> --->
    <:return />
 </:function>
</:processingdirective>
</:component>